services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false

  TYPO3\CMS\Extbase\:
    resource: '../Classes/*'

  TYPO3\CMS\Extbase\Core\BootstrapInterface:
    alias: TYPO3\CMS\Extbase\Core\Bootstrap

  TYPO3\CMS\Extbase\Core\Bootstrap:
    public: true
    shared: false

  TYPO3\CMS\Extbase\Object\ObjectManagerInterface:
    alias: TYPO3\CMS\Extbase\Object\ObjectManager

  # formerly in EXT:extbase/ext_localconf.php
  TYPO3\CMS\Extbase\Persistence\QueryInterface:
    alias: TYPO3\CMS\Extbase\Persistence\Generic\Query
  TYPO3\CMS\Extbase\Persistence\QueryResultInterface:
    alias: TYPO3\CMS\Extbase\Persistence\Generic\QueryResult
  TYPO3\CMS\Extbase\Persistence\PersistenceManagerInterface:
    alias: TYPO3\CMS\Extbase\Persistence\Generic\PersistenceManager
  TYPO3\CMS\Extbase\Persistence\Generic\Storage\BackendInterface:
    alias: TYPO3\CMS\Extbase\Persistence\Generic\Storage\Typo3DbBackend
  TYPO3\CMS\Extbase\Persistence\Generic\QuerySettingsInterface:
    alias: TYPO3\CMS\Extbase\Persistence\Generic\Typo3QuerySettings

  # Set incompatible classes to null, these require (runtime) parametrized
  # prototype instantiation
  TYPO3\CMS\Extbase\Persistence\Generic\Query: ~
  TYPO3\CMS\Extbase\Persistence\Generic\QueryResult: ~
  TYPO3\CMS\Extbase\Persistence\Generic\Typo3QuerySettings: ~

  TYPO3\CMS\Extbase\Persistence\Generic\Mapper\DataMapper:
    shared: false
    arguments:
      $query: null

  cache.extbase:
    class: TYPO3\CMS\Core\Cache\Frontend\FrontendInterface
    factory: ['@TYPO3\CMS\Core\Cache\CacheManager', 'getCache']
    arguments: ['extbase']

  # Listener for old Signal Slots
  TYPO3\CMS\Extbase\Compatibility\SlotReplacement:
    tags:
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'afterRequestDispatched'
        event: TYPO3\CMS\Extbase\Event\Mvc\AfterRequestDispatchedEvent
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'beforeCallActionMethod'
        event: TYPO3\CMS\Extbase\Event\Mvc\BeforeActionCallEvent
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'afterDataMappedForObject'
        event: TYPO3\CMS\Extbase\Event\Persistence\AfterObjectThawedEvent
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'emitBeforeGettingObjectDataSignal'
        event: TYPO3\CMS\Extbase\Event\Persistence\ModifyQueryBeforeFetchingObjectDataEvent
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'emitAfterGettingObjectDataSignal'
        event: TYPO3\CMS\Extbase\Event\Persistence\ModifyResultAfterFetchingObjectDataEvent
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'emitEndInsertObjectSignal'
        event: TYPO3\CMS\Extbase\Event\Persistence\EntityFinalizedAfterPersistenceEvent
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'emitAfterInsertObjectSignal'
        event: TYPO3\CMS\Extbase\Event\Persistence\EntityAddedToPersistenceEvent
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'emitAfterUpdateObjectSignal'
        event: TYPO3\CMS\Extbase\Event\Persistence\EntityUpdatedInPersistenceEvent
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'emitAfterRemoveObjectSignal'
        event: TYPO3\CMS\Extbase\Event\Persistence\EntityRemovedFromPersistenceEvent
      - name: event.listener
        identifier: 'legacy-slot'
        method: 'emitAfterPersistObjectSignal'
        event: TYPO3\CMS\Extbase\Event\Persistence\EntityPersistedEvent

  TYPO3\CMS\Extbase\Mvc\View\GenericViewResolver: ~
  TYPO3\CMS\Extbase\Mvc\View\ViewResolverInterface: '@TYPO3\CMS\Extbase\Mvc\View\GenericViewResolver'
